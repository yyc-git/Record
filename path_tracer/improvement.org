
* TODO interactive render

https://www-file.huawei.com/-/media/corporate/pdf/ilab/2019/cloud_game_whitepaper.pdf





interactive render in editor



one worker node generate one whole picture!!!



** TODO multi thread in one worker node

cpus and one gpu(only one gpu card) in one worker node should be parallel!!!

cpu:
thread1: scheduller
receive render commmands(events);
send picture

thread2: exec render commands to generate state


gpu:
render picture(may be lag one frame with cpu)



** TODO should solve GPU virtual!

because one user should occupy one worker node for a time!
so should support at least 10 users use the interactive render service at the same time!


should separate interactive render's and picture's worker node!!!
(picture's worker node not consider about GPU virtual while the interactive render should consider!!!)


** TODO support arcball camera

when move, use 1 spp


** TODO add editor
use event sourcing;
the data:
events
scene graph data(.wd)
use render1(edit scene),render2(run scene) to render in local;
can export to render3 snapshot;
support use render3 for run scene for vip user;
note:
persistent data only use events!!!no editor state/engine state!!!
(use store and state for show data in react)



features:
edit, run scene;
import(.ldr, .wd_ldr);
export(.wd_ldr, render3 snapshot);
no assets;
arcball camera;
add/remove camera, light:direction, point lights
transform;



(.wd_ldr = .ldr + camera, light data)


engine should parse .wd_ldr to .wd!




** TODO use webrtc to transport?







* TODO utils multiple gpus in one worker node for interactive render


one worker node generate one whole picture;
one gpu can render one tile of the whole picture.


should implement after webgpu support it!?(pre 1.0)



* TODO add texture
parse ldr's texture data;
render3 support texture;




* TODO V-RAY COMPATIBILITY

Fully compatible with V-Ray content: materials, lights, environments, geometries, proxies, render options, etc.

refer to https://www.cl3ver.com/



* TODO support more formats(gltf, fbx, 3dmax)


* TODO texture lod
https://media.contentapi.ea.com/content/dam/ea/seed/presentations/2019-ray-tracing-gems-chapter-20-akenine-moller-et-al.pdf


* TODO improve map

now only support linear filter, not support wrap! not consider about mipmap!


so can support nearest filter(use more samplers-bindGroups?);support wrap(texCoord < 0.0 || texCoord > 1.0); consider mipmap;


* TODO improve normal map

https://www.zhihu.com/question/316029127
https://zhuanlan.zhihu.com/p/63419999
https://blogs.unity3d.com/cn/2017/10/02/microfacet-based-normal-mapping-for-robust-monte-carlo-path-tracing/


* TODO sample VNDF instead of NDF

basic learning:
http://www.pbr-book.org/3ed-2018/Light_Transport_I_Surface_Reflection/Sampling_Reflection_Functions.html
https://hal.archives-ouvertes.fr/tel-01291974/file/TH2015DupuyJonathan2.pdf



refer to:
http://jcgt.org/published/0007/04/01/slides.pdf
https://github.com/NVIDIA/Q2RTX/issues/40
https://stackoverflow.com/questions/58248624/implementing-ggx-vndf-importance-sampling-with-dxr
http://jcgt.org/published/0007/04/01/paper.pdf
https://schuttejoe.github.io/post/ggximportancesamplingpart1/
https://schuttejoe.github.io/post/ggximportancesamplingpart2/





* TODO use blue noise

refer to:
http://psgraphics.blogspot.com/2018/10/flavors-of-sampling-in-ray-tracing.html
https://hal.archives-ouvertes.fr/hal-02158423/file/blueNoiseTemporal2019_slides.pdf
https://belcour.github.io/blog/research/2019/06/18/animation-bluenoise.html
https://zhuanlan.zhihu.com/p/90017623






* TODO support multiple layer material

refer to:
https://zhuanlan.zhihu.com/p/51398301
https://www.google.com/search?q=Practical+Multilayered+Materials+in+Call+of+Duty%3A+Infinite+Warfare&oq=Practical+Multilayered+Materials+in+Call+of+Duty%3A+Infinite+Warfare&aqs=chrome..69i57.293j0j1&sourceid=chrome&ie=UTF-8
https://research.cs.cornell.edu/layered-sg14/
https://computergraphics.stackexchange.com/questions/5758/path-tracing-materials
https://computergraphics.stackexchange.com/questions/8013/pbr-how-to-handle-multiple-bsdfs-and-material-type?noredirect=1&lq=1
https://autodesk.github.io/standard-surface/#discussion/layeringmodel
https://www.google.com/search?newwindow=1&safe=strict&sxsrf=ALeKk03hgnTbzH6pLqnUO0Hv_qbVDs3MsA%3A1602578613012&ei=tWiFX8ArkdD6BK2MgqAH&q=bssrdf&oq=bssrdf&gs_lcp=CgZwc3ktYWIQAzIECCMQJzICCAAyAggAMgIIADICCAAyAggAMgIIADICCAAyAggAMgIIAFCyCljlE2DjFGgAcAF4AIABwQKIAfQJkgEDMy00mAEAoAEBqgEHZ3dzLXdpesABAQ&sclient=psy-ab&ved=0ahUKEwiA2s_HlrHsAhURqJ4KHS2GAHQQ4dUDCA0&uact=5


consider reciprocal?




** TODO support thin fim layer

gltf has this extension:
https://github.com/KhronosGroup/glTF/issues/1221
https://github.com/KhronosGroup/glTF/pull/1742



** TODO support KHR_materials_clearcoat, KHR_materials_sheen gltf extension

https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat
https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_sheen


Blender 2.90 already support KHR_materials_clearcoat!

wait for blender to support KHR_materials_sheen???



* TODO load big scene file(e.g. > 1 GB?)


refer to:
[Rendering the Moana Island Scene Part 2: A production scene from a hobby renderer](https://schuttejoe.github.io/post/disneypostmortem/)


* TODO render water

refer to:
[Rendering the Moana Island Scene Part 2: A production scene from a hobby renderer](https://schuttejoe.github.io/post/disneypostmortem/) -> Next steps





* TODO use more sample way to reduce noise

refer to https://zhuanlan.zhihu.com/p/72673165:
BidirectionalPath Tracing
Metropolis Light Transport

Energy Redistribution Path Tracing
https://www.google.com/search?q=Energy+Redistribution+Path+Tracing&oq=Energy+Redistribution+Path+Tracing&aqs=chrome..69i57j69i59l2.154j0j7&sourceid=chrome&ie=UTF-8
http://raytracey.blogspot.com/2010/07/energy-redistribution-path-tracing-in.html

Manifold Exploration



refer to:
https://zhuanlan.zhihu.com/p/28407938

comparision:
http://maverick.inria.fr/~Nicolas.Holzschuch/Comparison/



** TODO more
*** TODO photon mapping

*** TODO 自适应采样
refer to:
https://www.zhihu.com/question/35640573


现代路径追踪算法中使用的自适应采样主要集中于两个地方：

对摄像机光线的自适应采样
靠近光源一段的末端路径对海量光源的自适应采样




* TODO learn usdz, support it instead of wd?

references:

https://developer.nvidia.com/usd



https://graphics.pixar.com/usd/docs/index.html
http://graphics.pixar.com/usd/docs/api/index.html
https://github.com/PixarAnimationStudios/USD


youtube:
https://www.youtube.com/watch?v=x9ikzGQW0ys&t=5s



three.js->issue:
https://github.com/mrdoob/three.js/issues/14219



ios:
https://developer.apple.com/cn/augmented-reality/quick-look/


converter:
https://github.com/google/usd_from_gltf
https://github.com/TimvanScherpenzeel/gltf-to-usdz-research

https://developer.apple.com/augmented-reality/tools/ -> Download USDZ tools
(already get tool from wechat->Lin, search "usdpython" in macbook!)



work with nvidia-omniverse-platform;
https://developer.nvidia.com/nvidia-omniverse-platform

